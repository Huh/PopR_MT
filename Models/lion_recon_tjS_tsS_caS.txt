    model{
      #  Naming 
      #  Parameter names begin with a capitalized letter
      #  Data are all lower case
      #  Indexing always follows - DAU, Year, Age, Sex
      #  If fewer indices are needed they follow the same order despite 
      #   omissions

      #  Priors
      #  Pregnancy rates - [age, sex, mean:tau]
      Preg[1] ~ dnorm(preg[3,1,1], preg[3,1,2])T(0,0.5)
      Preg[2] ~ dnorm(preg[4,1,1], preg[4,1,2])T(0,0.5)

      #  Fetus Counts - [age, sex, mean:tau]
      FC[1] ~ dnorm(fc[3,1,1], fc[3,1,2])T(0,3)
      FC[2] ~ dnorm(fc[4,1,1], fc[4,1,2])T(0,3)
      #  Survival
      #  Priors on survival - First age class, not available for harvest, so
      #   survival is the only parameter
      #  Informative prior stored as probability
      yS_mu ~ dnorm(means[1,1,1], means[1,1,2])T(0,1)

      #  Transform probability back to real scale and use as the intercept
      for(u in 1:ndau){
        for(yr in 1:nyr){
          for(s in 1:2){
            logit(S[u,yr, 1, s]) <- log(yS_mu/(1 - yS_mu))
            H[u,yr,1,s] <- 0
            O[u,yr,1,s] <- 0
          }
        }
      }
      
      #  Priors on survival - Juveniles - two sexes, cause specific mortality
      for(s in 1:2){
        #  Informative priors are stored as probabilities
        jS_tmp[1,s] ~ dnorm(means[2,s,1], means[2,s,2])T(0, 1)
        jS_tmp[2,s] ~ dnorm(meanh[2,s,1], meanh[2,s,2])T(0, 1)
        jS_tmp[3,s] ~ dnorm(meano[2,s,1], meano[2,s,2])T(0, 1)
        
        #  Transform probability to real scale
        for(i in 1:3){
          jS_mu[i,s] <- log(jS_tmp[i,s]/jS_tmp[3,s])
        }

        tauj[s] ~ dunif(0, 20)
        
        #  Describe rate as function of linear predictor and define link
        #   function
        for(u in 1:ndau){
          for(yr in 1:nyr){
            j_yr[yr,s] ~ dnorm(0, tauj[s])
            log(jS_log[u,yr,s]) <- jS_mu[1,s] + j_yr[yr,s]
            log(jH_log[u,yr,s]) <- jS_mu[2,s]      
            log(jO_log[u,yr,s]) <- 0
            jSums[u,yr,s] <- jS_log[u,yr,s] + jH_log[u,yr,s] + jO_log[u,yr,s]
            S[u,yr,2,s] <- jS_log[u,yr,s]/jSums[u,yr,s]
            H[u,yr,2,s] <- jH_log[u,yr,s]/jSums[u,yr,s]
            O[u,yr,2,s] <- jO_log[u,yr,s]/jSums[u,yr,s]
          }
        }
      }

      #  Priors on survival - SubAdults - two sexes, cause specific mortality
      for(s in 1:2){
        #  Informative priors are stored as probabilities
        sS_tmp[1,s] ~ dnorm(means[3,s,1], means[3,s,2])T(0, 1)
        sS_tmp[2,s] ~ dnorm(meanh[3,s,1], meanh[3,s,2])T(0, 1)
        sS_tmp[3,s] ~ dnorm(meano[3,s,1], meano[3,s,2])T(0, 1)
        
        #  Transform probability to real scale
        for(i in 1:3){
          sS_mu[i,s] <- log(sS_tmp[i,s]/sS_tmp[3,s])
        }

        taus[s] ~ dunif(0, 20)

        #  Describe rate as function of linear predictor and define link
        #   function
        for(u in 1:ndau){
          for(yr in 1:nyr){
            s_yr[yr,s] ~ dnorm(0, taus[s])
            log(sS_log[u,yr,s]) <- sS_mu[1,s] + s_yr[yr,s]
            log(sH_log[u,yr,s]) <- sS_mu[2,s]      
            log(sO_log[u,yr,s]) <- 0
            sSums[u,yr,s] <- sS_log[u,yr,s] + sH_log[u,yr,s] + sO_log[u,yr,s]
            S[u,yr,3,s] <- sS_log[u,yr,s]/sSums[u,yr,s]
            H[u,yr,3,s] <- sH_log[u,yr,s]/sSums[u,yr,s]
            O[u,yr,3,s] <- sO_log[u,yr,s]/sSums[u,yr,s]
          }
        }
      }
      
      #  Priors on survival - Adults, two sexes, cause specific mortality
      for(s in 1:2){
        #  Informative priors are stored as probabilities
        aS_tmp[1,s] ~ dnorm(means[4,s,1], means[4,s,2])T(0, 1)
        aS_tmp[2,s] ~ dnorm(meanh[4,s,1], meanh[4,s,2])T(0, 1)
        aS_tmp[3,s] ~ dnorm(meano[4,s,1], meano[4,s,2])T(0, 1)
        
        #  Transform probability to real scale
        for(i in 1:3){
          aS_mu[i,s] <- log(aS_tmp[i,s]/aS_tmp[3,s])
        }
        
        #  Describe rate as function of linear predictor and define link
        #   function
        for(u in 1:ndau){
          for(yr in 1:nyr){
            log(aS_log[u,yr,s]) <- aS_mu[1,s]
            log(aH_log[u,yr,s]) <- aS_mu[2,s]
            log(aO_log[u,yr,s]) <- 0
            aSums[u,yr,s] <- aS_log[u,yr,s] + aH_log[u,yr,s] + aO_log[u,yr,s]
            S[u,yr,4,s] <- aS_log[u,yr,s]/aSums[u,yr,s]
            H[u,yr,4,s] <- aH_log[u,yr,s]/aSums[u,yr,s]
            O[u,yr,4,s] <- aO_log[u,yr,s]/aSums[u,yr,s]
          }
        }
      }

      ###  Prior on first year population size
      #  Indexing - Year, Age, Sex
      for(u in 1:ndau){
        N[u,1,1,1] ~ dnorm(n1[1,2], 1/n1[1,2])T(0,)
        N[u,1,1,2] <- N[u,1,1,1]
        
        for(s in 1:2){
          N[u,1,2,s] ~ dnorm(n1[2,s+1], 1/n1[2,s+1])T(0,)
          N[u,1,3,s] ~ dnorm(n1[3,s+1], 1/n1[3,s+1])T(0,)
          N[u,1,4,s] ~ dnorm(n1[4,s+1], 1/n1[4,s+1])T(0,)
        }
        
        yN[u,1] <- N[u,1,1,1] + N[u,1,1,2]
        fN[u,1] <- N[u,1,2,1] + N[u,1,3,1] + N[u,1,4,1]
        mN[u,1] <- N[u,1,2,2] + N[u,1,3,2] + N[u,1,4,2]
        totN[u,1] <- yN[u,1] + fN[u,1] + mN[u,1]
      }

      ###  Process model - 4 ages, 2 sex
      #  Using normal approximation because it is fast and mixes well
      #  Sex = 1 is a female
      #  Indexing follows - DAU, Year, Age, Sex
      for(u in 1:ndau){
        for(yr in 2:nyr){
          #  Kittens
          #  Normal approximation of Poisson
          nMu[u,yr,1,1] <- 
            ((N[u,yr,3,1] * 0.5 * FC[1] * Preg[1]) + 
              (N[u,yr,4,1] * 0.5 * FC[2] * Preg[2])) * 
              S[u,yr-1,1,1]
          nMu[u,yr,1,2] <- nMu[u,yr,1,1]
          
          N[u,yr,1,1] ~ dnorm(nMu[u,yr,1,1], 1/(nMu[u,yr,1,1]))
          N[u,yr,1,2] <- N[u,yr,1,1]
        
          for(s in 1:2){
            #  Juveniles
            #  Normal approximation of Binomial
            nMu[u,yr,2,s] <- 
              (1 - O[u,yr-1,2,s]) * (N[u,yr-1,1,s] - harv[u,yr-1,2,s])
              
            nTau[u,yr,2,s] <- 1/((N[u,yr-1,1,1] - harv[u,yr-1,2,s]) * 
              (O[u,yr-1,2,s]) * (1 - O[u,yr-1,2,s]))
              
            N[u,yr,2,s] ~ dnorm(nMu[u,yr,2,s], nTau[u,yr,2,s])
            
            #  SubAdults
            #  Normal approximation of Binomial
            nMu[u,yr,3,s] <- 
              (1 - O[u,yr-1,3,s]) * (N[u,yr-1,2,s] - harv[u,yr-1,3,s])
              
            nTau[u,yr,3,s] <- 1/((N[u,yr-1,2,s] - harv[u,yr-1,3,s]) * 
              (O[u,yr-1,3,s]) * (1 - O[u,yr-1,3,s]))
              
            N[u,yr,3,s] ~ dnorm(nMu[u,yr,3,s], nTau[u,yr,3,s])
        
            #  Adults
            #  Normal approximation of Binomial
            #  Female Other Mortality shared between the sexes
            nMu[u,yr,4,s] <- 
              (N[u,yr-1,3,s] + N[u,yr-1,4,s] - harv[u,yr-1,4,s]) *
                (1 - O[u,yr-1,4,s])

            nTau[u,yr,4,s] <- 
              1/((N[u,yr-1,3,s] + N[u,yr-1,4,s] - harv[u,yr-1,4,s]) * 
              (O[u,yr-1,4,s]) * (1 - O[u,yr-1,4,s]))
              
            N[u,yr,4,s] ~ dnorm(nMu[u,yr,4,s], nTau[u,yr,4,s])
          }
        
        #  Totals in each year
        yN[u,yr] <- N[u,yr,1,1] + N[u,yr,1,2]
        fN[u,yr] <- N[u,yr,2,1] + N[u,yr,3,1] + N[u,yr,4,1]
        mN[u,yr] <- N[u,yr,2,2] + N[u,yr,3,2] + N[u,yr,4,2]
        totN[u,yr] <- yN[u,yr] + fN[u,yr] + mN[u,yr]
        }
      }

      ####################  Observation Models
      #  Indexing/columns always follows
      #    1   2     3    4    5    6
      #  DAU, Year, Age, Sex, Mean, Tau

      #  Abundance Observation - [dau, yr]
      for(i in 1:nn){
        ndat[i,5] ~ dnorm(totN[1,ndat[i,2]], ndat[i,6])T(0,)
      }      

      #  Harvest Observations - [dau,yr,a,s]
      for(u in 1:ndau){
        for(yr in 1:nobs_yr){
          for(a in 1:nage){
            for(s in 1:2){
              harv[u,yr,a,s] ~ dbinom(H[u,yr,a,s], round(N[u,yr,a,s]))
            }
          }
        }
      }
      
      #  Survival Observations
      for(i in 1:ns){
        sdat[i,5] ~ dnorm(S[1, sdat[i,2], sdat[i,3], sdat[i,4]], sdat[i,6])T(0, 1)
      }
      #  Harvest Mortality Rate Observations     
      for(i in 1:nhm){
        hmdat[i,5] ~ dnorm(H[1, hmdat[i,2], hmdat[i,3], hmdat[i,4]], hmdat[i,6])T(0, 1)
      }
      #  Other (Non-Harvest) Mortality Rate Observations
      for(i in 1:nom){
        omdat[i,5] ~ dnorm(O[1, omdat[i,2], omdat[i,3], omdat[i,4]], omdat[i,6])T(0, 1)
      }

      #  Derived - the constant is added to avoid division by 0
      for(u in 1:ndau){
        for(yr in 1:nyr){
          mf[u,yr] <- (mN[u,yr] + 0.001)/(fN[u,yr] + 0.001)
        }
      }

      #  Incomplete vectors cannot be monitored, so aribitrary value is given
      #  to the first year
      #  Same constant trick is used here for the division
      #  Using the log and exp handles 0 gracefully, recall that
      #  log(x) + log(y) = log(xy), so the geometric mean is calculated using
      #  an algebraic rearrangment that is more robust to 0's
      for(u in 1:ndau){
        lambda[u,1] <- 1
        for(yr in 2:nyr){
          lambda[u,yr] <- (totN[u,yr] + 0.001)/(totN[u,yr-1] + 0.001)
          logla[u,yr] <- log(lambda[u,yr])
        }
        geoLambda[u] <- exp((1/(nyr-1))*sum(logla[u,2:(nyr)]))
      }
  }